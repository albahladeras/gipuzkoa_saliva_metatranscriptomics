import os
from snakemake.io import expand

# Paths
PATH_REF = "/mnt/data3/alba_cph/resources/microbiome_saliva_bucal"
TMP_DIR = "/mnt/data3/alba_cph/results/05_create_reference_genome/tmp"
OUTPUT_FILE = "/mnt/data3/alba_cph/results/05_create_reference_genome/all_genomes.fna"
results_dir = "/mnt/data3/alba_cph/results/05_create_reference_genome"

# Unique reference genomes
GENOMES = [
    line.strip().replace(".zip", "")
    for line in open(os.path.join(PATH_REF, "unique_reference_species.txt"))
]

# Rule all
rule all:
    input:
        "/mnt/data3/alba_cph/results/05_create_reference_genome/all_genomes.1.bt2",
        "/mnt/data3/alba_cph/results/05_create_reference_genome/all_genomes.2.bt2",
        "/mnt/data3/alba_cph/results/05_create_reference_genome/all_genomes.3.bt2",
        "/mnt/data3/alba_cph/results/05_create_reference_genome/all_genomes.4.bt2",
        "/mnt/data3/alba_cph/results/05_create_reference_genome/all_genomes.rev.1.bt2",
        "/mnt/data3/alba_cph/results/05_create_reference_genome/all_genomes.rev.2.bt2",
        "/mnt/data3/alba_cph/results/05_create_reference_genome/all_genomes.gff",
        "/mnt/data3/alba_cph/results/05_create_reference_genome/all_genomes.faa",
        "/mnt/data3/alba_cph/results/05_create_reference_genome/all_genomes.ffn"




# Unzip files, save than in directories with the same name and remove zips
rule unzip:
    input:
        zip_file=lambda wc: os.path.join(PATH_REF, f"{wc.genome}.zip")
    output:
        directory(f"{TMP_DIR}/{{genome}}")
    shell:
        """
        mkdir -p {output} \
        && unzip -q {input.zip_file} -d {output} \
        && rm -f {input.zip_file}
        """

# Concat fna files
rule concatenate_fna:
    input:
        directory = TMP_DIR
    output:
        OUTPUT_FILE
    shell:
        """
        find {input.directory} -name "*.fna" | sort | xargs cat > {output}
        """

#Build bowtie index
rule build_bowtie_index:
    input:
        fna = f"{results_dir}/all_genomes.fna"
    output:
        expand("/mnt/data3/alba_cph/results/05_create_reference_genome/all_genomes.{ext}", 
               ext=["1.bt2", "2.bt2", "3.bt2", "4.bt2", "rev.1.bt2", "rev.2.bt2"])
    conda:
        "environments/mapping.yml"
    resources:
        mem_mb=8192,
        runtime=lambda wildcards, attempt: 60 * (2 ** (attempt - 1))  # Duplicar tiempo en cada intento
    threads: 2
    shell:
        """
        bowtie2-build {input.fna} /mnt/data3/alba_cph/results/05_create_reference_genome/all_genomes
        """

## Generate gff, faa and ffn with prodigal
## The meta option is to take into account that is a file with many genomes that have been concatenated   

rule annotate_concatenated_with_prodigal:
    input:
        fna = f"{results_dir}/all_genomes.fna"
    output:
        gff = f"{results_dir}/all_genomes.gff",
        faa = f"{results_dir}/all_genomes.faa",
        ffn = f"{results_dir}/all_genomes.ffn"
    conda:
        "environments/prodigal.yml"
    shell:
        """
        prodigal -i {input.fna} \
                 -o {output.gff} \
                 -a {output.faa} \
                 -d {output.ffn} \
                 -f gff \
                 -p meta
        """
